{
  "name": "HCL",
  "scopeName": "source.hcl",
  "comment": "HashiCorp Configuration Language extended with Couper specific patterns",
  "fileTypes": [
    "couper",
    "hcl"
  ],
  "patterns": [
    { "include": "#comments" },
    { "include": "#block" },
    { "include": "#attributes" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "comment": "Single line comments with number-sign",
          "match": "(#)+(.*)",
          "captures": {
            "0": {"name": "comment.line.number-sign.hcl" }
          }
        },
        {
          "comment": "Single line comments with double-slash",
          "match": "(//)+(.*)",
          "captures": {
            "0": { "name": "comment.line.double-slash.hcl" }
          }
        },
        {
          "comment": "Multiple line comment block",
          "begin": "/\\*",
          "beginCaptures": {
            "0" : { "name": "comment.block.documentation.hcl" }
          },
          "end": "\\*/",
          "endCaptures": {
            "0" : { "name": "comment.block.documentation.hcl" }
          },
          "contentName" : "comment.block.documentation.hcl"
        }
      ]
    },
    "block": {
      "patterns" : [
        {
          "begin": "([\\w-]+)((?:\\s*\"[^\"]*\")*)\\s*\\{",
          "beginCaptures": {
            "0": { "name": "meta.function.hcl" },
            "1": { "name": "storage.type.hcl" },
            "2": { "name": "string.quoted.double.hcl" }
          },
          "end": "\\}",
          "patterns" : [
            { "include": "$self" },
            { "include": "#comments" },
            { "include": "#attributes" }
          ]
        }
      ]
    },
    "attributes": {
      "patterns" : [
        {
          "begin": "([\\w\\.-]+)\\s*(=)\\s*",
          "beginCaptures": {
            "1": { "name": "variable.parameter.hcl" },
            "2": { "name": "keyword.operator.hcl" }
          },
          "end": "(?<!\\2)$",
          "endCaptures" : {
            "0": { "name": "keyword.operator.hcl" }
          },
          "patterns": [
            { "include": "#comments" },
            { "include": "#variable-type-heredoc" },
            { "include": "#expression" }
          ]
        }
      ]
    },
    "quoted-key-assignment": {
      "patterns" : [
        {
          "begin": "(\"[^\"]+\")\\s*([=:])\\s*",
          "beginCaptures": {
            "1": { "name": "variable.parameter.hcl" },
            "2": { "name": "keyword.operator.hcl" }
          },
          "end": "(?<!\\2)$",
          "endCaptures" : {
            "0": { "name": "keyword.operator.hcl" }
          },
          "patterns": [
            { "include": "#comments" },
            { "include": "#variable-type-heredoc" },
            { "include": "#expression" }
          ]
        }
      ]
    },
    "key-assignment": {
      "patterns" : [
        {
          "begin": "([\\w\\.-]+)\\s*([=:])\\s*",
          "beginCaptures": {
            "1": { "name": "variable.parameter.hcl" },
            "2": { "name": "keyword.operator.hcl" }
          },
          "end": "(?<!\\2)$",
          "endCaptures" : {
            "0": { "name": "keyword.operator.hcl" }
          },
          "patterns": [
            { "include": "#comments" },
            { "include": "#variable-type-heredoc" },
            { "include": "#expression" }
          ]
        }
      ]
    },
    "expression": {
      "patterns": [
        { "include": "#variable-type-string" },
        { "include": "#numeric-literal" },
        { "include": "#variable-type-constant" },
        { "include": "#variable-type-array" },
        { "include": "#object" },
        { "include": "#expr-term-get-attr" },
        { "include": "#function-call" },
        { "include": "#variable" }
      ]
    },
    "variable": {
      "patterns": [
        {
          "match": "\\b(couper|env|request|backend_requests?|backend_responses?)\\b",
          "captures": {
            "0": { "name": "variable.language.hcl" }
          }
        }
      ]
    },
    "expr-term-get-attr": {
      "patterns": [
        {
          "match": "(\\.)\\s*([\\w-]+)(?:\\s*(\\.)\\s*([\\w-]+))?",
          "captures": {
            "1": { "name": "keyword.operator.hcl" },
            "2": { "name": "variable.other.hcl" },
            "3": { "name": "keyword.operator.hcl" },
            "4": { "name": "variable.language.hcl" }
          }
        }
      ]
    },
    "variable-interpolation" : {
      "patterns" : [
        {
          "begin": "\\$\\{",
          "beginCaptures": {
            "0": { "name": "keyword.operator.hcl" }
          },
          "end" : "\\}",
          "endCaptures": {
            "0": { "name": "keyword.operator.hcl" }
          },
          "patterns" : [
            { "include": "#variable-interpolation" },
            { "include": "#expression" }
          ]
        }
      ]
    },
    "function-call": {
      "patterns" : [
        {
          "begin": "([\\w-]+)\\(",
          "beginCaptures": {
            "1": { "name": "entity.name.function.hcl" }
          },
          "end" : "\\)",
          "patterns" : [
            { "include": "#expression" }
          ]
        }
      ]
    },
    "variable-type-array": {
      "patterns": [
        {
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            { "include": "#comments" },
            { "include": "#expression" },
            {
              "match": "\\s*,\\s*"
            }
          ]
        }
      ]
    },
    "object" : {
      "patterns": [
        {
          "begin": "\\{",
          "end": "\\}",
          "patterns" : [
            { "include": "#comments" },
            { "include": "#key-assignment" },
            { "include": "#quoted-key-assignment" },
            {
              "match": "\\s*,\\s*"
            }
          ]
        }
      ]
    },
    "numeric-literal" : {
      "patterns" : [
        {
          "match": "\\b[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?\\b",
          "captures": {
            "0": { "name": "constant.numeric.hcl" }
          }
        }
      ]
    },
    "variable-type-constant": {
      "patterns" : [
        {
          "match": "\\b(true|false|null)\\b",
          "captures": {
            "0": { "name": "constant.numeric.hcl" }
          }
        }
      ]
    },
    "variable-type-string" : {
      "patterns" : [
        {
          "comment" : "Usual string",
          "begin": "\"",
          "beginCaptures" : {
            "0": { "name": "string.quoted.double.hcl" }
          },
          "end": "\"",
          "endCaptures" : {
            "0": { "name": "string.quoted.double.hcl" }
          },
          "patterns" : [
            { "include" : "#variable-interpolation" },
            {
              "match" : "\\\\[nrt\\\\\"]|\\\\u([a-fA-F0-9]{8}|[a-fA-F0-9]{4})",
              "captures": {
                "0": { "name": "constant.character.escape.hcl" }
              }
            },
            {
              "match" : ".",
              "captures": {
                "0": { "name": "string.quoted.double.hcl" }
              }
            }
          ]
        }
      ]
    },
    "variable-type-heredoc" : {
      "patterns" : [
        {
          "comment" : "Heredoc string",
          "begin": "<<-?([\\w-]+)",
          "beginCaptures": {
            "0": { "name": "entity.name.tag.hcl" }
          },
          "end": "^\\s*\\1$",
          "endCaptures": {
            "0": { "name": "entity.name.tag.hcl" }
          },
          "contentName": "string.unquoted.here-doc.hcl"
        }
      ]
    }
  }
}
